{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Use Cases",
    "coa": {
        "data": {
            "description": "This playbook resets the password of a potentially compromised user account. First, an analyst is prompted to evaluate the situation and choose whether to reset the account. If they approve, a strong password is generated and the password is reset.",
            "edges": [
                {
                    "id": "port_8_to_port_2",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_2_to_port_9",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_9_to_port_7",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "id": "port_7_to_port_1",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_9_to_port_5",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_5_to_port_6",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_6_to_port_1",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_2_to_port_3",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "id": "port_3_to_port_4",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "id": "port_4_to_port_1",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_0_to_port_8",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                }
            ],
            "globalCustomCode": "from random import randint\nfrom random import shuffle",
            "hash": "a31e5282534fdb8f52cb49b9c62ca120e0c58db0",
            "nodes": {
                "0": {
                    "customCode": "def on_start(container):\n    phantom.debug('on_start() called')\n\n    reset_password(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 200,
                    "y": 80
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 360,
                    "y": 1240
                },
                "2": {
                    "data": {
                        "advanced": {
                            "customName": "reset option",
                            "customNameId": 0,
                            "join": [],
                            "note": "Follow direction of the prompt for resetting the user's password\n\nGREEN: Proceed with reset\nPURPLE: Proceed to end (with notes)"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "reset_password:action_result.summary.responses.0",
                                        "value": "Yes"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "reset_option",
                        "id": "2",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "decision",
                    "warnings": {},
                    "x": 160,
                    "y": 380
                },
                "3": {
                    "data": {
                        "advanced": {
                            "customName": "format decline msg",
                            "customNameId": 0,
                            "description": "Formats a message stating the user declined to reset the password",
                            "join": [],
                            "note": "Formats a message stating the user declined to reset the password"
                        },
                        "functionId": 2,
                        "functionName": "format_decline_msg",
                        "id": "3",
                        "parameters": [
                            "artifact:*.cef.compromisedUserName"
                        ],
                        "template": "Analyst declined to reset password for user: {0}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "format",
                    "warnings": {},
                    "x": 440,
                    "y": 520
                },
                "4": {
                    "data": {
                        "advanced": {
                            "customName": "add comment no reset",
                            "customNameId": 0,
                            "description": "Add the comment notifying the reader that the password reset was declined",
                            "join": [],
                            "note": "Add the comment notifying the reader that the password reset was declined"
                        },
                        "functionId": 3,
                        "functionName": "add_comment_no_reset",
                        "id": "4",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "format_decline_msg:formatted_data"
                            }
                        }
                    },
                    "errors": {},
                    "id": "4",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 440,
                    "y": 1000
                },
                "5": {
                    "data": {
                        "advanced": {
                            "customName": "format pwd message",
                            "customNameId": 0,
                            "description": "Formats a message about the password reset to provide in the comments",
                            "join": [],
                            "note": "Formats a message about the password reset to provide in the comments"
                        },
                        "functionId": 1,
                        "functionName": "format_pwd_message",
                        "id": "5",
                        "parameters": [
                            "artifact:*.cef.compromisedUserName",
                            "generate_password:custom_function:strong_password"
                        ],
                        "template": "Reset user {0} password to {1}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "format",
                    "warnings": {},
                    "x": -120,
                    "y": 760
                },
                "6": {
                    "data": {
                        "advanced": {
                            "customName": "add comment pwd reset",
                            "customNameId": 0,
                            "join": [],
                            "note": "This block adds a comment to the Activities pane stating which user had their password reset and the new password"
                        },
                        "functionId": 2,
                        "functionName": "add_comment_pwd_reset",
                        "id": "6",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "format_pwd_message:formatted_data"
                            }
                        }
                    },
                    "errors": {},
                    "id": "6",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": -120,
                    "y": 1000
                },
                "7": {
                    "data": {
                        "action": "set password",
                        "actionType": "contain",
                        "advanced": {
                            "customName": "reset ad password",
                            "customNameId": 0,
                            "description": "Reset the Active Directory password of the user to the generated password",
                            "join": [],
                            "note": "Reset the Active Directory password of the user to the generated password"
                        },
                        "connector": "LDAP",
                        "connectorConfigs": [
                            "active directory"
                        ],
                        "connectorId": "84110F27-6602-4DC8-A6F2-0311B1720BF8",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "reset_ad_password",
                        "id": "7",
                        "parameters": {
                            "new_password": "generate_password:custom_function:strong_password",
                            "username": "artifact:*.cef.compromisedUserName"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "username"
                            },
                            {
                                "data_type": "string",
                                "field": "new_password"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "action",
                    "warnings": {},
                    "x": 160,
                    "y": 1000
                },
                "8": {
                    "data": {
                        "advanced": {
                            "customName": "reset password",
                            "customNameId": 0,
                            "join": [],
                            "note": "Prompts the user if they'd like to reset the password in Active Directory"
                        },
                        "approver": {
                            "type": "user",
                            "value": "admin"
                        },
                        "functionId": 1,
                        "functionName": "reset_password",
                        "id": "8",
                        "message": "Found the account \"{0}\" has a compromised credential! Would you like to automatically reset the password?",
                        "parameters": [
                            "artifact:*.cef.compromisedUserName"
                        ],
                        "responseTime": 30.0,
                        "responses": [
                            {
                                "responseOptions": [
                                    "Yes",
                                    "No"
                                ],
                                "responsePrompt": "",
                                "responseType": "yes/no"
                            }
                        ],
                        "type": "prompt"
                    },
                    "errors": {
                        "responses": [
                            {
                                "responsePrompt": "Questions cannot be empty."
                            }
                        ]
                    },
                    "id": "8",
                    "type": "prompt",
                    "warnings": {},
                    "x": 160,
                    "y": 240
                },
                "9": {
                    "data": {
                        "advanced": {
                            "customName": "generate password",
                            "customNameId": 0,
                            "description": "Custom code block that generates a strong random password",
                            "join": [],
                            "note": "Custom code block that generates a strong random password"
                        },
                        "functionId": 1,
                        "functionName": "generate_password",
                        "id": "9",
                        "inputParameters": [],
                        "outputVariables": [
                            "strong_password"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "code",
                    "userCode": "\n    alpha = 'abcdefghijklmnopqrstuvwxyz'\n    num = '0123456789'\n    special = '!@#$%^&*('\n    \n    pwd = ''\n    for i in range(5):\n        pwd += alpha[randint(0, len(alpha)-1)]\n        pwd += (alpha[randint(0, len(alpha)-1)]).upper()\n        pwd += num[randint(0, len(num)-1)]\n        pwd += special[randint(0, len(special)-1)]\n    r = list(pwd)\n    shuffle(r)\n    generate_password__strong_password = ''.join(r)\n",
                    "warnings": {},
                    "x": 160,
                    "y": 520
                }
            },
            "notes": "This playbook uses the following Apps:\n - LDAP (set password) - reset the password of a user\n\nDeployment Notes:\n - This playbook works on artifacts with artifact:*.cef.compromisedUserName which can be created as shown in the playbook \"recorded_future_handle_leaked_credentials\"\n - The prompt is hard-coded to use \"admin\" as the user, so change it to the correct user or role",
            "origin": {
                "playbook_id": 739,
                "playbook_name": "activedirectory_reset_password_copy",
                "playbook_repo_id": 29,
                "playbook_repo_name": "SOAR"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.10",
        "version": "4.10.0.40677"
    },
    "create_time": "2024-09-24T05:09:07.610767+00:00",
    "draft_mode": false,
    "labels": [
        "events"
    ],
    "tags": []
}